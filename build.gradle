plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
	id "com.modrinth.minotaur" version "2.+"
	id 'net.darkhax.curseforgegradle' version "1.1.16"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = "Parchment"
		url = 'https://maven.parchmentmc.org'
	}
	maven {
		name = "Porting Lib"
		url = "https://mvn.devos.one/snapshots/"
	}
	maven {
		name = "CCA"
		url = 'https://maven.ladysnake.org/releases'
	}
	maven {
		name = "Modrinth (Projectile Damage Attribute)"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
	maven {
		url = "https://jitpack.io/"
	}
	maven {
		url = "https://maven.jamieswhiteshirt.com/libs-release/"
		content {
			includeGroup "com.jamieswhiteshirt"
		}
	}
	maven { url 'https://maven.blamejared.com' }
	maven { url "https://maven.shedaniel.me" }
	maven { url "https://maven.terraformersmc.com" }
	maven { url "https://cursemaven.com" }
	maven { url "https://maven.bai.lol" }
	maven { url 'https://maven.wispforest.io' } //owo lib
	maven {
		name = "Fuzs Mod Resources"
		url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
	}
	maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }

	maven {
		name = "MrCrayfish (GitHub)"
		url = "https://maven.pkg.github.com/MrCrayfish/Maven"
		credentials {
			//username = project.findProperty("gpr.user") ?: System.getenv("GH_ID")
			username = project.findProperty("gpr.user") ?: "gogglebobby@gmail.com" //only used for gh, what a terrible name lol
			password = project.findProperty("gpr.key") ?: System.getenv("GH_TOKEN")
		}
		content {
			includeGroup "com.mrcrayfish"
		}
	}
	repositories {
		maven {
			url = "https://maven.draylar.dev/releases"
			content {
				includeGroup "dev.draylar"
			}
		}
	}

	mavenLocal()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-1.20.1:2023.06.26@zip")
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modCompileOnly modRuntimeOnly( "maven.modrinth:fakerlib:${project.fakerlib_version}"), {
		exclude(group: "me.shedaniel")
	}
	modCompileOnly modRuntimeOnly( "maven.modrinth:zenith-attributes:${project.zenith_attributes_version}"), {
		exclude(group: "me.shedaniel")
	}

	// Mixin Extras + Mixin^2 for mod compat
	//implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:${project.mixin_extras_version}"))
	implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.2.0-beta.10")) //want to use later version but things break if i do :))))))))))))
	implementation(annotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-fabric:${project.mixin_squared_version}"))

	modImplementation("com.jamieswhiteshirt:reach-entity-attributes:${project.reach_lib_version}")

	modImplementation("io.github.fabricators_of_create.Porting-Lib:accessors:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:attributes:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:base:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:client_events:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:common:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:core:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:entity:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:extensions:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:lazy_registration:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:loot:2.1.1102+1.20-entity-refactor") //Using a more recent version... hopefully fine?
	modImplementation("io.github.fabricators_of_create.Porting-Lib:mixin_extensions:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:models:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:registries:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:tags:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:tool_actions:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:transfer:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:utility:${project.port_lib_version}")

	modCompileOnly modRuntimeOnly("vazkii.patchouli:Patchouli:${project.patchouli_version}"), {
		exclude(group: "net.fabricmc.fabric-api")
	}

	// Fabric ASM
	modImplementation(include("com.github.Chocohead:Fabric-ASM:${project.fabric_asm_version}"))

	// CCA + PAL
	modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cardinal_components_version}")
	modImplementation("io.github.ladysnake:PlayerAbilityLib:${project.pal_version}")
	modImplementation("maven.modrinth:projectile-damage-attribute:${project.projectile_damage}-fabric")

	// ModMenu
	modCompileOnly modRuntimeOnly("com.terraformersmc:modmenu:${project.modmenu_version}"), {
		exclude(group: "net.fabricmc.fabric-api")
	}

	// Trinkets
	modCompileOnly modRuntimeOnly("dev.emi:trinkets:${project.trinkets_version}")

	// WTHIT
	modCompileOnly "mcp.mobius.waila:wthit-api:fabric-${project.wthit_version}"

	//Jade
	modCompileOnly "curse.maven:jade-324717:${jade_id}"

	// REI
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:${project.rei_version}"

	// EMI
	modCompileOnly "dev.emi:emi-fabric:${emi_version}"

	switch (block_viewer.toLowerCase(Locale.ROOT)) {
		case "wthit": 	modRuntimeOnly "mcp.mobius.waila:wthit:fabric-${project.wthit_version}"
			modRuntimeOnly "lol.bai:badpackets:fabric-${project.badpackets_version}"; break
		case "jade": modRuntimeOnly "curse.maven:jade-324717:${jade_id}"; break
		case "disabled": break
		default: println("Unknown block viewer specified: $recipe_viewer. Must be Jade, WTHIT, or disabled.")
	}

	switch (recipe_viewer.toLowerCase(Locale.ROOT)) {
		case "rei": modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
					modRuntimeOnly "dev.architectury:architectury-fabric:${project.arch_version}"; break
		case "emi": modRuntimeOnly("dev.emi:emi-fabric:${project.emi_version}"); break
		case "disabled": break
		default: println("Unknown recipe viewer specified: $recipe_viewer. Must be EMI, REI or disabled.")
	}


	//Fixes +compat for other mods
	//Spell power + Spell engine
	modCompileOnly(("maven.modrinth:spell-power:${project.spell_power_version}-fabric"))
	modCompileOnly(("maven.modrinth:spell-engine:${project.spell_engine_version}-fabric"))

	//modCompileOnly("io.wispforest:lavender:0.1.0-pre.6+1.20") //conjuring
	//modCompileOnly("io.wispforest:owo-lib:0.11.0+1.20")
	//modCompileOnly "curse.maven:conjuring-422310:4580578"

	//puzzlelib
	modCompileOnly "curse.maven:puzzles-lib-495476:4847147"
	modApi "fuzs.forgeconfigapiport:forgeconfigapiport-fabric:8.0.0"

	//dragon loot
	modCompileOnly "curse.maven:dragonloot-424480:4656260"
	modRuntimeOnly("me.shedaniel.cloth:cloth-config-fabric:11.1.106") { //cloth config, required by dragon loot
		exclude(group: "net.fabricmc.fabric-api")
	}

	//modCompileOnly "curse.maven:mariums-soulslike-weaponry-632066:4891244" //soulslike weaponry

	//goblin traders
	//modCompileOnly "com.mrcrayfish:framework-fabric:1.20.1-0.6.13"
	//modRuntimeOnly "com.mrcrayfish:catalogue-fabric:1.20.1-1.7.1"
	//modCompileOnly "com.mrcrayfish:goblintraders-fabric:1.20.1-1.9.3"

	//modern industrialization
	modCompileOnly "curse.maven:modern-industrialization-405388:4775647", {
		exclude(group: "me.shedaniel")
	}

	//Iceberg
	modCompileOnly "curse.maven:iceberg-fabric-539382:4953470"
	modCompileOnly "curse.maven:equipment-compare-fabric-541329:4940609"

	//spectrum
	modCompileOnly "com.github.DaFuqs:Spectrum:${project.spectrum_version}", {
		exclude(group: "com.github.devs-immortal.*")
		exclude(group: "azzy.fabric.*")
	}

}
loom {
	accessWidenerPath = file("src/main/resources/zenith.aw")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version, "loader_version": project.loader_version, "fakerlib_version": project.fakerlib_version, "zenith_attributes_version": project.zenith_attributes_version, "fapi_version": project.fabric_version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {

}


jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}

}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {

	}
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN")
	projectId = "zenith"
	versionType = "release"
	versionName = "Zenith " + project.version
	uploadFile = remapJar
	gameVersions = ["1.20.1"]
	loaders = ["fabric"]
	changelog = "[Changelog](https://github.com/TheWinABagel/Zenith/blob/1.20/changelog.md)"
	//debugMode = true
	dependencies {
		required.project "fabric-api"
		required.project("fakerlib")
		required.project("zenith-attributes")
		embedded.project("porting_lib")
	}
}

task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
	apiToken = System.getenv("cf_token")
	//debugMode = true
	def mainFile = upload(620928, remapJar)
	mainFile.changelog = "https://github.com/TheWinABagel/Zenith/blob/1.20/changelog.md"
	mainFile.releaseType = "release"
	//mainFile.addJavaVersion("17")
	mainFile.addGameVersion("1.20.1")
	mainFile.addModLoader("fabric")
	mainFile.displayName = project.archives_base_name + "-" + project.version
	mainFile.addRequirement("fakerlib") //Fakerlib
	mainFile.addRequirement("zenith-attributes") //ZenithAttributes
	mainFile.addRequirement("fabric-api") //FAPI
	mainFile.addRequirement("patchouli-fabric") //Patchouli
	mainFile.addOptional("roughly-enough-items") //REI
	mainFile.addOptional("enchantment-descriptions") //Enchantment Descriptions
}
